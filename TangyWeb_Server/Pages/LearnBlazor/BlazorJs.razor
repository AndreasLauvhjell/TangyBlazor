@page "/LearnBlazor/BlazorJs"
@inject IJSRuntime _JSRuntime

<h3>BlazorJs</h3>
<div class="row">
    <button class="btn btn-secondary" style="width:200px;" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row gap-2 mt-3">
    <button class="btn btn-success" style="width:200px;" @onclick="ToastrSuccess">Toastr success</button>
    <button class="btn btn-danger" style="width:200px;" @onclick="ToastrFailure">Toastr failure</button>
</div>

<div class="row gap-2 mt-5">
    <button class="btn btn-success" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert success</button>
    <button class="btn btn-danger" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert failure</button>
</div>

<div class="row mt-3">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation pending!</p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JSRuntime.ToastrSuccess("Operation successful");
    }

    private async Task ToastrFailure()
    {
        await _JSRuntime.ToastrError("Operation failed");
    }


    private async Task SweetAlertSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSweetAlert", "success", "Success notification!", "Task completed successfully!");
    }

    private async Task SweetAlertFailure()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSweetAlert", "error", "Failure notification!", "Task was not completed!");
    }
}
